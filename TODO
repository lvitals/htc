
1.  Qualificador const não suportado  
    Problema: Sem const, não é possível declarar variáveis somente leitura de forma segura.  
    Impacto: Qualquer otimização baseada em imutabilidade fica impossível. Usar #define é apenas substituição textual, o compilador não reconhece como constante.
    
2.  Qualificador volatile não suportado  
    Problema: Variáveis que mudam fora do controle do programa (hardware, interrupções) podem ser otimizadas incorretamente.  
    Impacto: Código embarcado pode se comportar de forma errática, pois o compilador assume que o valor da variável não muda sozinho.  
    Workaround: Evitar otimizações agressivas e usar flags de controle manual.
    
3.  Tipo long double não suportado  
    Problema: Sem ponto flutuante de precisão estendida, fica limitado a float e double.  
    Impacto: Aplicações que requerem cálculos de alta precisão podem apresentar erros acumulados maiores.
    
4.  Macros pré-definidas ausentes (**DATE**, **TIME**)  
    Problema: Não é possível registrar automaticamente a data e hora da compilação.  
    Impacto: Ferramentas de build ou logs de versão precisam de soluções alternativas, como gerar #define BUILD\_DATE por script.
    
5.  Inicialização de arrays locais  
    Problema: Arrays locais só podem ser inicializados se declarados como static.  
    Impacto: Arrays inicializados passam a ser alocados em memória estática em vez da pilha, consumindo RAM fixa.
    
6.  Biblioteca padrão incompleta  
    Problema: Funções básicas como isupper e isdigit podem não existir ou funcionar de forma limitada.  
    Impacto: É necessário escrever funções próprias (my\_isupper, my\_isdigit), aumentando o volume de código e a manutenção.
    

Conclusão  
O HI-TECH C é uma implementação parcial de C89/C90 voltada para microcontroladores.  
Faltam qualificadores importantes (const, volatile), tipos de dados avançados (long double ausente) e a biblioteca padrão é limitada.  
Além disso, a inicialização de arrays locais é restrita.  
Essas limitações exigem soluções alternativas menos elegantes por parte do programador.
